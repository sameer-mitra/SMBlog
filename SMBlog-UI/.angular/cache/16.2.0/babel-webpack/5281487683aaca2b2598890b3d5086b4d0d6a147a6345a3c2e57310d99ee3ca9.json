{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { ApplicationUserLogin } from 'src/app/models/account/application-user-login.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Must be between 5-20 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Must be between 10-50 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\nexport class LoginComponent {\n  constructor(accountService, router, formBuilder) {\n    this.accountService = accountService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    if (this.accountService.isLoggedIn) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: [null, [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n      password: [null, [Validators.required, Validators.minLength(10), Validators.maxLength(50)]]\n    });\n  }\n  isTouched(field) {\n    return this.loginForm.get(field).touched;\n  }\n  hasErrors(field) {\n    return this.loginForm.get(field).errors;\n  }\n  hasError(field, error) {\n    return !!this.loginForm.get(field).hasError(error);\n  }\n  onSubmit() {\n    let applicationUserLogin = new ApplicationUserLogin(this.loginForm.get(\"username\").value, this.loginForm.get(\"password\").value);\n    this.accountService.login(applicationUserLogin).subscribe(() => {\n      this.router.navigate(['/dashboard']);\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 14,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"mt-5\"], [1, \"text-dark\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Username\", 1, \"form-control\", \"form-control-lg\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\", 3, \"ngClass\"], [1, \"btn\", \"btn-block\", \"mb-3\", \"bg-primary\", \"text-light\", 3, \"disabled\"], [1, \"invalid-feedback\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 3);\n      i0.ɵɵtext(6, \"Get to your dashboard and start blogging\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5);\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, ctx.hasErrors(\"username\") && ctx.isTouched(\"username\"), !ctx.hasErrors(\"username\") && ctx.isTouched(\"username\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"username\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"username\", \"minlength\") || ctx.hasError(\"username\", \"maxlength\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c0, ctx.hasErrors(\"password\") && ctx.isTouched(\"password\"), !ctx.hasErrors(\"password\") && ctx.isTouched(\"password\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"password\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"password\", \"minlength\") || ctx.hasError(\"password\", \"maxlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","ApplicationUserLogin","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","accountService","router","formBuilder","isLoggedIn","navigate","ngOnInit","loginForm","group","username","required","minLength","maxLength","password","isTouched","field","get","touched","hasErrors","errors","hasError","error","onSubmit","applicationUserLogin","value","login","subscribe","ɵɵdirectiveInject","i1","AccountService","i2","Router","i3","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_7_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_10_Template","LoginComponent_div_11_Template","LoginComponent_div_14_Template","LoginComponent_div_15_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c0","valid"],"sources":["C:\\Users\\Sameer\\source\\repos\\SMBlog\\SMBlog-UI\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Sameer\\source\\repos\\SMBlog\\SMBlog-UI\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApplicationUserLogin } from 'src/app/models/account/application-user-login.model';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  \n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { \n    if(this.accountService.isLoggedIn){\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: [null, [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]],\n      password: [null, [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(50)\n      ]]\n    });\n  }\n\n  isTouched(field: string){\n    return this.loginForm.get(field).touched;\n  }\n\n  hasErrors(field: string) {\n    return this.loginForm.get(field).errors;\n  }\n\n  hasError(field: string, error: string) {\n    return !!this.loginForm.get(field).hasError(error);\n  }\n\n  onSubmit() {\n    let applicationUserLogin: ApplicationUserLogin = new ApplicationUserLogin(\n      this.loginForm.get(\"username\").value,\n      this.loginForm.get(\"password\").value\n    );\n\n    this.accountService.login(applicationUserLogin).subscribe(() => {\n      this.router.navigate(['/dashboard']);\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 mt-5\">\n\n            <h3 class=\"text-dark\">Login</h3>\n            <p class=\"text-dark\">Get to your dashboard and start blogging</p>\n\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        [ngClass]=\"{'is-invalid' : hasErrors('username') && isTouched('username'),\n                                    'is-valid' : !hasErrors('username') && isTouched('username')}\"\n                        class=\"form-control form-control-lg\"\n                        formControlName=\"username\"\n                        placeholder=\"Username\">\n\n                    <div *ngIf=\"hasError('username', 'required')\" class=\"invalid-feedback\">\n                        Username is required\n                    </div>\n\n                    <div *ngIf=\"hasError('username', 'minlength') || hasError('username', 'maxlength')\" \n                        class=\"invalid-feedback\">\n                        Must be between 5-20 characters\n                    </div>\n                </div>\n\n                <div class=\"mb-3\">\n                    <input\n                        type=\"password\"\n                        [ngClass]=\"{'is-invalid' : hasErrors('password') && isTouched('password'),\n                                    'is-valid' : !hasErrors('password') && isTouched('password')}\"\n                        class=\"form-control form-control-lg\"\n                        formControlName=\"password\"\n                        placeholder=\"Password\">\n\n                    <div *ngIf=\"hasError('password', 'required')\" class=\"invalid-feedback\">\n                        Password is required\n                    </div>\n\n                    <div *ngIf=\"hasError('password', 'minlength') || hasError('password', 'maxlength')\" \n                        class=\"invalid-feedback\">\n                        Must be between 10-50 characters\n                    </div>\n                </div>\n\n                <button class=\"btn btn-block mb-3 bg-primary text-light\"\n                [disabled]=\"!loginForm.valid\">Login</button>\n\n            </form>\n\n        </div>\n    </div>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}